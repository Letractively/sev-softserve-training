//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Web.UI.WebControls;
using System.Web.Security;
using System.Web.Mvc;
using OrderSystem.Resources.Shared;
using OrderSystem.Attributes;
[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("OrderSystemModel", "FK_Orders_Card", "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderSystem.Models.Card), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderSystem.Models.Orders), true)]
[assembly: EdmRelationshipAttribute("OrderSystemModel", "FK_ItemsOrder_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderSystem.Models.Items), "ItemsOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderSystem.Models.ItemsOrder), true)]
[assembly: EdmRelationshipAttribute("OrderSystemModel", "FK_ItemsOrder_Order", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderSystem.Models.Orders), "ItemsOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderSystem.Models.ItemsOrder), true)]
[assembly: EdmRelationshipAttribute("OrderSystemModel", "FK_Orders_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderSystem.Models.Users), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderSystem.Models.Orders), true)]
[assembly: EdmRelationshipAttribute("OrderSystemModel", "FK_Users_Rank", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderSystem.Models.Rank), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderSystem.Models.Users), true)]

#endregion

namespace OrderSystem.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class OrderSystemEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект OrderSystemEntities, используя строку соединения из раздела "OrderSystemEntities" файла конфигурации приложения.
        /// </summary>
        public OrderSystemEntities() : base("name=OrderSystemEntities", "OrderSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrderSystemEntities.
        /// </summary>
        public OrderSystemEntities(string connectionString) : base(connectionString, "OrderSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrderSystemEntities.
        /// </summary>
        public OrderSystemEntities(EntityConnection connection) : base(connection, "OrderSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Card> Card
        {
            get
            {
                if ((_Card == null))
                {
                    _Card = base.CreateObjectSet<Card>("Card");
                }
                return _Card;
            }
        }
        private ObjectSet<Card> _Card;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Items> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Items>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Items> _Items;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ItemsOrder> ItemsOrder
        {
            get
            {
                if ((_ItemsOrder == null))
                {
                    _ItemsOrder = base.CreateObjectSet<ItemsOrder>("ItemsOrder");
                }
                return _ItemsOrder;
            }
        }
        private ObjectSet<ItemsOrder> _ItemsOrder;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Orders> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Orders>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Orders> _Orders;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Rank> Rank
        {
            get
            {
                if ((_Rank == null))
                {
                    _Rank = base.CreateObjectSet<Rank>("Rank");
                }
                return _Rank;
            }
        }
        private ObjectSet<Rank> _Rank;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Card. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCard(Card card)
        {
            base.AddObject("Card", card);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Items. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToItems(Items items)
        {
            base.AddObject("Items", items);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ItemsOrder. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToItemsOrder(ItemsOrder itemsOrder)
        {
            base.AddObject("ItemsOrder", itemsOrder);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Orders. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrders(Orders orders)
        {
            base.AddObject("Orders", orders);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Rank. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRank(Rank rank)
        {
            base.AddObject("Rank", rank);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrderSystemModel", Name="Card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Card : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Card.
        /// </summary>
        /// <param name="cardID">Исходное значение свойства CardID.</param>
        /// <param name="cardNumber">Исходное значение свойства CardNumber.</param>
        /// <param name="cardType">Исходное значение свойства CardType.</param>
        /// <param name="cVV2Code">Исходное значение свойства CVV2Code.</param>
        /// <param name="expiredDate">Исходное значение свойства ExpiredDate.</param>
        public static Card CreateCard(global::System.Int32 cardID, global::System.String cardNumber, global::System.String cardType, global::System.String cVV2Code, global::System.DateTime expiredDate)
        {
            Card card = new Card();
            card.CardID = cardID;
            card.CardNumber = cardNumber;
            card.CardType = cardType;
            card.CVV2Code = cVV2Code;
            card.ExpiredDate = expiredDate;
            return card;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                if (_CardID != value)
                {
                    OnCardIDChanging(value);
                    ReportPropertyChanging("CardID");
                    _CardID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CardID");
                    OnCardIDChanged();
                }
            }
        }
        private global::System.Int32 _CardID;
        partial void OnCardIDChanging(global::System.Int32 value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private global::System.String _CardType;
        partial void OnCardTypeChanging(global::System.String value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CVV2Code
        {
            get
            {
                return _CVV2Code;
            }
            set
            {
                OnCVV2CodeChanging(value);
                ReportPropertyChanging("CVV2Code");
                _CVV2Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CVV2Code");
                OnCVV2CodeChanged();
            }
        }
        private global::System.String _CVV2Code;
        partial void OnCVV2CodeChanging(global::System.String value);
        partial void OnCVV2CodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MakeDate
        {
            get
            {
                return _MakeDate;
            }
            set
            {
                OnMakeDateChanging(value);
                ReportPropertyChanging("MakeDate");
                _MakeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MakeDate");
                OnMakeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MakeDate;
        partial void OnMakeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMakeDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiredDate
        {
            get
            {
                return _ExpiredDate;
            }
            set
            {
                OnExpiredDateChanging(value);
                ReportPropertyChanging("ExpiredDate");
                _ExpiredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiredDate");
                OnExpiredDateChanged();
            }
        }
        private global::System.DateTime _ExpiredDate;
        partial void OnExpiredDateChanging(global::System.DateTime value);
        partial void OnExpiredDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueNumber
        {
            get
            {
                return _IssueNumber;
            }
            set
            {
                OnIssueNumberChanging(value);
                ReportPropertyChanging("IssueNumber");
                _IssueNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueNumber");
                OnIssueNumberChanged();
            }
        }
        private global::System.String _IssueNumber;
        partial void OnIssueNumberChanging(global::System.String value);
        partial void OnIssueNumberChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_Orders_Card", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("OrderSystemModel.FK_Orders_Card", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("OrderSystemModel.FK_Orders_Card", "Orders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrderSystemModel", Name="Items")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Items : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Items.
        /// </summary>
        /// <param name="itemID">Исходное значение свойства ItemID.</param>
        /// <param name="itemName">Исходное значение свойства ItemName.</param>
        /// <param name="itemDescriprion">Исходное значение свойства ItemDescriprion.</param>
        /// <param name="price">Исходное значение свойства Price.</param>
        /// <param name="quantity">Исходное значение свойства Quantity.</param>
        public static Items CreateItems(global::System.Int32 itemID, global::System.String itemName, global::System.String itemDescriprion, global::System.Decimal price, global::System.Int32 quantity)
        {
            Items items = new Items();
            items.ItemID = itemID;
            items.ItemName = itemName;
            items.ItemDescriprion = itemDescriprion;
            items.Price = price;
            items.Quantity = quantity;
            return items;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemDescriprion
        {
            get
            {
                return _ItemDescriprion;
            }
            set
            {
                OnItemDescriprionChanging(value);
                ReportPropertyChanging("ItemDescriprion");
                _ItemDescriprion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemDescriprion");
                OnItemDescriprionChanged();
            }
        }
        private global::System.String _ItemDescriprion;
        partial void OnItemDescriprionChanging(global::System.String value);
        partial void OnItemDescriprionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_ItemsOrder_Items", "ItemsOrder")]
        public EntityCollection<ItemsOrder> ItemsOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemsOrder>("OrderSystemModel.FK_ItemsOrder_Items", "ItemsOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemsOrder>("OrderSystemModel.FK_ItemsOrder_Items", "ItemsOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrderSystemModel", Name="ItemsOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemsOrder : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ItemsOrder.
        /// </summary>
        /// <param name="itemID">Исходное значение свойства ItemID.</param>
        /// <param name="itemInfoID">Исходное значение свойства ItemInfoID.</param>
        /// <param name="orderID">Исходное значение свойства OrderID.</param>
        /// <param name="quantity">Исходное значение свойства Quantity.</param>
        /// <param name="dimension">Исходное значение свойства Dimension.</param>
        public static ItemsOrder CreateItemsOrder(global::System.Int32 itemID, global::System.Int32 itemInfoID, global::System.Int32 orderID, global::System.Int32 quantity, global::System.String dimension)
        {
            ItemsOrder itemsOrder = new ItemsOrder();
            itemsOrder.ItemID = itemID;
            itemsOrder.ItemInfoID = itemInfoID;
            itemsOrder.OrderID = orderID;
            itemsOrder.Quantity = quantity;
            itemsOrder.Dimension = dimension;
            return itemsOrder;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemInfoID
        {
            get
            {
                return _ItemInfoID;
            }
            set
            {
                OnItemInfoIDChanging(value);
                ReportPropertyChanging("ItemInfoID");
                _ItemInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemInfoID");
                OnItemInfoIDChanged();
            }
        }
        private global::System.Int32 _ItemInfoID;
        partial void OnItemInfoIDChanging(global::System.Int32 value);
        partial void OnItemInfoIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Dimension
        {
            get
            {
                return _Dimension;
            }
            set
            {
                OnDimensionChanging(value);
                ReportPropertyChanging("Dimension");
                _Dimension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Dimension");
                OnDimensionChanged();
            }
        }
        private global::System.String _Dimension;
        partial void OnDimensionChanging(global::System.String value);
        partial void OnDimensionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_ItemsOrder_Items", "Items")]
        public Items Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Items>("OrderSystemModel.FK_ItemsOrder_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Items>("OrderSystemModel.FK_ItemsOrder_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Items> ItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Items>("OrderSystemModel.FK_ItemsOrder_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Items>("OrderSystemModel.FK_ItemsOrder_Items", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_ItemsOrder_Order", "Orders")]
        public Orders Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("OrderSystemModel.FK_ItemsOrder_Order", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("OrderSystemModel.FK_ItemsOrder_Order", "Orders").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Orders> OrdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("OrderSystemModel.FK_ItemsOrder_Order", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Orders>("OrderSystemModel.FK_ItemsOrder_Order", "Orders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrderSystemModel", Name="Orders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orders : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Orders.
        /// </summary>
        /// <param name="orderID">Исходное значение свойства OrderID.</param>
        /// <param name="userID">Исходное значение свойства UserID.</param>
        /// <param name="cardID">Исходное значение свойства CardID.</param>
        /// <param name="orderNumber">Исходное значение свойства OrderNumber.</param>
        /// <param name="status">Исходное значение свойства Status.</param>
        /// <param name="orderingDate">Исходное значение свойства OrderingDate.</param>
        /// <param name="deliveryDate">Исходное значение свойства DeliveryDate.</param>
        /// <param name="assignee">Исходное значение свойства Assignee.</param>
        /// <param name="totalPrice">Исходное значение свойства TotalPrice.</param>
        /// <param name="discount">Исходное значение свойства Discount.</param>
        /// <param name="isGift">Исходное значение свойства IsGift.</param>
        public static Orders CreateOrders(global::System.Int32 orderID, global::System.Int32 userID, global::System.Int32 cardID, global::System.String orderNumber, global::System.String status, global::System.DateTime orderingDate, global::System.DateTime deliveryDate, global::System.String assignee, global::System.Decimal totalPrice, global::System.Double discount, global::System.Boolean isGift)
        {
            Orders orders = new Orders();
            orders.OrderID = orderID;
            orders.UserID = userID;
            orders.CardID = cardID;
            orders.OrderNumber = orderNumber;
            orders.Status = status;
            orders.OrderingDate = orderingDate;
            orders.DeliveryDate = deliveryDate;
            orders.Assignee = assignee;
            orders.TotalPrice = totalPrice;
            orders.Discount = discount;
            orders.IsGift = isGift;
            return orders;
        }

        #endregion
        #region Свойства-примитивы
    
        // For DropDownList
        public global::System.Collections.Generic.List<global::System.String> Merchandisers
        {
            get;
            set;
        }

        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                OnCardIDChanging(value);
                ReportPropertyChanging("CardID");
                _CardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardID");
                OnCardIDChanged();
            }
        }
        private global::System.Int32 _CardID;
        partial void OnCardIDChanging(global::System.Int32 value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.String _OrderNumber;
        partial void OnOrderNumberChanging(global::System.String value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderingDate
        {
            get
            {
                return _OrderingDate;
            }
            set
            {
                OnOrderingDateChanging(value);
                ReportPropertyChanging("OrderingDate");
                _OrderingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderingDate");
                OnOrderingDateChanged();
            }
        }
        private global::System.DateTime _OrderingDate;
        partial void OnOrderingDateChanging(global::System.DateTime value);
        partial void OnOrderingDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeliveryDate
        {
            get
            {
                return _DeliveryDate;
            }
            set
            {
                OnDeliveryDateChanging(value);
                ReportPropertyChanging("DeliveryDate");
                _DeliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryDate");
                OnDeliveryDateChanged();
            }
        }
        private global::System.DateTime _DeliveryDate;
        partial void OnDeliveryDateChanging(global::System.DateTime value);
        partial void OnDeliveryDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PreferableDeliveryDate
        {
            get
            {
                return _PreferableDeliveryDate;
            }
            set
            {
                OnPreferableDeliveryDateChanging(value);
                ReportPropertyChanging("PreferableDeliveryDate");
                _PreferableDeliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferableDeliveryDate");
                OnPreferableDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PreferableDeliveryDate;
        partial void OnPreferableDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPreferableDeliveryDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Assignee
        {
            get
            {
                return _Assignee;
            }
            set
            {
                OnAssigneeChanging(value);
                ReportPropertyChanging("Assignee");
                _Assignee = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Assignee");
                OnAssigneeChanged();
            }
        }
        private global::System.String _Assignee;
        partial void OnAssigneeChanging(global::System.String value);
        partial void OnAssigneeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private global::System.Decimal _TotalPrice;
        partial void OnTotalPriceChanging(global::System.Decimal value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private global::System.Double _Discount;
        partial void OnDiscountChanging(global::System.Double value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGift
        {
            get
            {
                return _IsGift;
            }
            set
            {
                OnIsGiftChanging(value);
                ReportPropertyChanging("IsGift");
                _IsGift = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGift");
                OnIsGiftChanged();
            }
        }
        private global::System.Boolean _IsGift;
        partial void OnIsGiftChanging(global::System.Boolean value);
        partial void OnIsGiftChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_Orders_Card", "Card")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("OrderSystemModel.FK_Orders_Card", "Card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("OrderSystemModel.FK_Orders_Card", "Card").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("OrderSystemModel.FK_Orders_Card", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("OrderSystemModel.FK_Orders_Card", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_ItemsOrder_Order", "ItemsOrder")]
        public EntityCollection<ItemsOrder> ItemsOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemsOrder>("OrderSystemModel.FK_ItemsOrder_Order", "ItemsOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemsOrder>("OrderSystemModel.FK_ItemsOrder_Order", "ItemsOrder", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_Orders_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("OrderSystemModel.FK_Orders_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("OrderSystemModel.FK_Orders_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("OrderSystemModel.FK_Orders_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("OrderSystemModel.FK_Orders_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrderSystemModel", Name="Rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rank : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Rank.
        /// </summary>
        /// <param name="rankID">Исходное значение свойства RankID.</param>
        /// <param name="rankTreshold">Исходное значение свойства RankTreshold.</param>
        /// <param name="rankName">Исходное значение свойства RankName.</param>
        /// <param name="iconName">Исходное значение свойства IconName.</param>
        /// <param name="percents">Исходное значение свойства Percents.</param>
        public static Rank CreateRank(global::System.Int32 rankID, global::System.Decimal rankTreshold, global::System.String rankName, global::System.String iconName, global::System.Double percents)
        {
            Rank rank = new Rank();
            rank.RankID = rankID;
            rank.RankTreshold = rankTreshold;
            rank.RankName = rankName;
            rank.IconName = iconName;
            rank.Percents = percents;
            return rank;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankID
        {
            get
            {
                return _RankID;
            }
            set
            {
                if (_RankID != value)
                {
                    OnRankIDChanging(value);
                    ReportPropertyChanging("RankID");
                    _RankID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RankID");
                    OnRankIDChanged();
                }
            }
        }
        private global::System.Int32 _RankID;
        partial void OnRankIDChanging(global::System.Int32 value);
        partial void OnRankIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RankTreshold
        {
            get
            {
                return _RankTreshold;
            }
            set
            {
                OnRankTresholdChanging(value);
                ReportPropertyChanging("RankTreshold");
                _RankTreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankTreshold");
                OnRankTresholdChanged();
            }
        }
        private global::System.Decimal _RankTreshold;
        partial void OnRankTresholdChanging(global::System.Decimal value);
        partial void OnRankTresholdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RankName
        {
            get
            {
                return _RankName;
            }
            set
            {
                OnRankNameChanging(value);
                ReportPropertyChanging("RankName");
                _RankName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RankName");
                OnRankNameChanged();
            }
        }
        private global::System.String _RankName;
        partial void OnRankNameChanging(global::System.String value);
        partial void OnRankNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IconName
        {
            get
            {
                return _IconName;
            }
            set
            {
                OnIconNameChanging(value);
                ReportPropertyChanging("IconName");
                _IconName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IconName");
                OnIconNameChanged();
            }
        }
        private global::System.String _IconName;
        partial void OnIconNameChanging(global::System.String value);
        partial void OnIconNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percents
        {
            get
            {
                return _Percents;
            }
            set
            {
                OnPercentsChanging(value);
                ReportPropertyChanging("Percents");
                _Percents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percents");
                OnPercentsChanged();
            }
        }
        private global::System.Double _Percents;
        partial void OnPercentsChanging(global::System.Double value);
        partial void OnPercentsChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_Users_Rank", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("OrderSystemModel.FK_Users_Rank", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("OrderSystemModel.FK_Users_Rank", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrderSystemModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="userID">Исходное значение свойства UserID.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="userFName">Исходное значение свойства UserFName.</param>
        /// <param name="userLName">Исходное значение свойства UserLName.</param>
        /// <param name="mail">Исходное значение свойства Mail.</param>
        /// <param name="region">Исходное значение свойства Region.</param>
        /// <param name="role">Исходное значение свойства Role.</param>
        public static Users CreateUsers(global::System.Int32 userID, global::System.String login, global::System.String password, global::System.String userFName, global::System.String userLName, global::System.String mail, global::System.String region, global::System.String role)
        {
            Users users = new Users();
            users.UserID = userID;
            users.Login = login;
            users.Password = password;
            users.UserFName = userFName;
            users.UserLName = userLName;
            users.Mail = mail;
            users.Region = region;
            users.Role = role;
            return users;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "Login", ResourceType = typeof(OrderSystemUserRes))]
        [Required(ErrorMessageResourceName = "FieldIsRequired", ErrorMessageResourceType = typeof(ErrorRes))]
        [StringLength(20, ErrorMessageResourceName = "FieldIsTooLong", ErrorMessageResourceType = typeof(ErrorRes))]
        [ContainSpaces(ErrorMessageResourceName = "FieldContainSpaces", ErrorMessageResourceType = typeof(ErrorRes))]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "Password", ResourceType = typeof(OrderSystemUserRes))]
        [Required(ErrorMessageResourceName = "FieldIsRequired", ErrorMessageResourceType = typeof(ErrorRes))]
        [StringLength(10, MinimumLength = 4, ErrorMessageResourceName = "FieldIsLimited", ErrorMessageResourceType = typeof(ErrorRes))]
        [RegularExpression(@"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+|\~\-\=\\/\" + "\"" + @":\;\'\<\>?\,.]).{4,}$", ErrorMessageResourceName = "PasswordIsWeak", ErrorMessageResourceType = typeof(ErrorRes))]
        [ContainSpaces(ErrorMessageResourceName = "FieldContainSpaces", ErrorMessageResourceType = typeof(ErrorRes))]
        [DataType(DataType.Password)]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        /// <summary>
        /// For validating only
        /// </summary>
        [Display(Name = "ConfirmPassword", ResourceType = typeof(OrderSystemUserRes))]
        [Compare("Password", ErrorMessageResourceName = "ConfirmPasswordIsNotEqual", ErrorMessageResourceType = typeof(ErrorRes))]
        [DataType(DataType.Password)]
        public global::System.String ConfirmPassword
        {
            get;
            set;
        }

        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "UserFName", ResourceType = typeof(OrderSystemUserRes))]
        [Required(ErrorMessageResourceName = "FieldIsRequired", ErrorMessageResourceType = typeof(ErrorRes))]
        [StringLength(50, ErrorMessageResourceName = "FieldIsTooLong", ErrorMessageResourceType = typeof(ErrorRes))]
        [RegularExpression(@"(\D)+", ErrorMessageResourceName = "FieldContainNumbers", ErrorMessageResourceType = typeof(ErrorRes))]
        public global::System.String UserFName
        {
            get
            {
                return _UserFName;
            }
            set
            {
                OnUserFNameChanging(value);
                ReportPropertyChanging("UserFName");
                _UserFName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserFName");
                OnUserFNameChanged();
            }
        }
        private global::System.String _UserFName;
        partial void OnUserFNameChanging(global::System.String value);
        partial void OnUserFNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "UserLName", ResourceType = typeof(OrderSystemUserRes))]
        [Required(ErrorMessageResourceName = "FieldIsRequired", ErrorMessageResourceType = typeof(ErrorRes))]
        [StringLength(50, ErrorMessageResourceName = "FieldIsTooLong", ErrorMessageResourceType = typeof(ErrorRes))]
        [RegularExpression(@"(\D)+", ErrorMessageResourceName = "FieldContainNumbers", ErrorMessageResourceType = typeof(ErrorRes))]
        public global::System.String UserLName
        {
            get
            {
                return _UserLName;
            }
            set
            {
                OnUserLNameChanging(value);
                ReportPropertyChanging("UserLName");
                _UserLName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserLName");
                OnUserLNameChanged();
            }
        }
        private global::System.String _UserLName;
        partial void OnUserLNameChanging(global::System.String value);
        partial void OnUserLNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "Mail", ResourceType = typeof(OrderSystemUserRes))]
        [Required(ErrorMessageResourceName = "IncorrectFormatOfField", ErrorMessageResourceType = typeof(ErrorRes))]
        [RegularExpression(@"[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?", ErrorMessageResourceName = "IncorrectFormatOfField", ErrorMessageResourceType = typeof(ErrorRes))]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "Region", ResourceType = typeof(OrderSystemUserRes))]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Display(Name = "Role", ResourceType = typeof(OrderSystemUserRes))]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rank;
        partial void OnRankChanging(Nullable<global::System.Decimal> value);
        partial void OnRankChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankType
        {
            get
            {
                return _RankType;
            }
            set
            {
                OnRankTypeChanging(value);
                ReportPropertyChanging("RankType");
                _RankType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankType");
                OnRankTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _RankType;
        partial void OnRankTypeChanging(Nullable<global::System.Int32> value);
        partial void OnRankTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_Orders_Users", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("OrderSystemModel.FK_Orders_Users", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("OrderSystemModel.FK_Orders_Users", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderSystemModel", "FK_Users_Rank", "Rank")]
        public Rank Rank1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("OrderSystemModel.FK_Users_Rank", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("OrderSystemModel.FK_Users_Rank", "Rank").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> Rank1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("OrderSystemModel.FK_Users_Rank", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("OrderSystemModel.FK_Users_Rank", "Rank", value);
                }
            }
        }

        #endregion
    }

    #endregion

    public class OrderedItemsInfo
    {
        public int ItemNumber { get; set; }

        public string ItemName { get; set; }

        public string ItemDescription { get; set; }

        public string Dimension { get; set; }

        public decimal Price { get; set; }

        public int Quantity { get; set; }

        public decimal PricePerLine { get; set; }

    }

    public class TotalOrderInfo
    {
        public string CostumerName { get; set; }

        public string CostumerType { get; set; }

        public int OrderNumber { get; set; }

        public decimal TotalPrice { get; set; }

        public string Assignee { get; set; }

        public DateTime DateOfOrdering { get; set; }

        public DateTime PreferableDeliveryDate { get; set; }

    }

    public class Logon
    {
        [Required(ErrorMessage = "Please enter user name")]
        public string UserLogin { get; set; }
        [Required(ErrorMessage = "Please enter password")]
        public string UserPassword { get; set; }
        public bool RememberMe { get; set; }
    }

    public class NextRankInfo
    {
        public double MoneyToNextRank { get; set; }
        public string NextRankName { get; set; }
    }
}
